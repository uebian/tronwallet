// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/contract/proposal_contract.proto

#include "core/contract/proposal_contract.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace protocol {
constexpr ProposalApproveContract::ProposalApproveContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proposal_id_(int64_t{0})
  , is_add_approval_(false){}
struct ProposalApproveContractDefaultTypeInternal {
  constexpr ProposalApproveContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalApproveContractDefaultTypeInternal() {}
  union {
    ProposalApproveContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalApproveContractDefaultTypeInternal _ProposalApproveContract_default_instance_;
constexpr ProposalCreateContract_ParametersEntry_DoNotUse::ProposalCreateContract_ParametersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProposalCreateContract_ParametersEntry_DoNotUseDefaultTypeInternal {
  constexpr ProposalCreateContract_ParametersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalCreateContract_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ProposalCreateContract_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalCreateContract_ParametersEntry_DoNotUseDefaultTypeInternal _ProposalCreateContract_ParametersEntry_DoNotUse_default_instance_;
constexpr ProposalCreateContract::ProposalCreateContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ProposalCreateContractDefaultTypeInternal {
  constexpr ProposalCreateContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalCreateContractDefaultTypeInternal() {}
  union {
    ProposalCreateContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalCreateContractDefaultTypeInternal _ProposalCreateContract_default_instance_;
constexpr ProposalDeleteContract::ProposalDeleteContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proposal_id_(int64_t{0}){}
struct ProposalDeleteContractDefaultTypeInternal {
  constexpr ProposalDeleteContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalDeleteContractDefaultTypeInternal() {}
  union {
    ProposalDeleteContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalDeleteContractDefaultTypeInternal _ProposalDeleteContract_default_instance_;
}  // namespace protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_core_2fcontract_2fproposal_5fcontract_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_core_2fcontract_2fproposal_5fcontract_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_core_2fcontract_2fproposal_5fcontract_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalApproveContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalApproveContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalApproveContract, proposal_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalApproveContract, is_add_approval_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalCreateContract, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalDeleteContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalDeleteContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::ProposalDeleteContract, proposal_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::ProposalApproveContract)},
  { 8, 15, sizeof(::protocol::ProposalCreateContract_ParametersEntry_DoNotUse)},
  { 17, -1, sizeof(::protocol::ProposalCreateContract)},
  { 24, -1, sizeof(::protocol::ProposalDeleteContract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ProposalApproveContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ProposalCreateContract_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ProposalCreateContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ProposalDeleteContract_default_instance_),
};

const char descriptor_table_protodef_core_2fcontract_2fproposal_5fcontract_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%core/contract/proposal_contract.proto\022"
  "\010protocol\"^\n\027ProposalApproveContract\022\025\n\r"
  "owner_address\030\001 \001(\014\022\023\n\013proposal_id\030\002 \001(\003"
  "\022\027\n\017is_add_approval\030\003 \001(\010\"\250\001\n\026ProposalCr"
  "eateContract\022\025\n\rowner_address\030\001 \001(\014\022D\n\np"
  "arameters\030\002 \003(\01320.protocol.ProposalCreat"
  "eContract.ParametersEntry\0321\n\017ParametersE"
  "ntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\"D\n\026"
  "ProposalDeleteContract\022\025\n\rowner_address\030"
  "\001 \001(\014\022\023\n\013proposal_id\030\002 \001(\003BE\n\030org.tron.p"
  "rotos.contractZ)github.com/tronprotocol/"
  "grpc-gateway/coreb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto = {
  false, false, 465, descriptor_table_protodef_core_2fcontract_2fproposal_5fcontract_2eproto, "core/contract/proposal_contract.proto", 
  &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once, nullptr, 0, 4,
  schemas, file_default_instances, TableStruct_core_2fcontract_2fproposal_5fcontract_2eproto::offsets,
  file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto, file_level_enum_descriptors_core_2fcontract_2fproposal_5fcontract_2eproto, file_level_service_descriptors_core_2fcontract_2fproposal_5fcontract_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_getter() {
  return &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_core_2fcontract_2fproposal_5fcontract_2eproto(&descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto);
namespace protocol {

// ===================================================================

class ProposalApproveContract::_Internal {
 public:
};

ProposalApproveContract::ProposalApproveContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.ProposalApproveContract)
}
ProposalApproveContract::ProposalApproveContract(const ProposalApproveContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  ::memcpy(&proposal_id_, &from.proposal_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_add_approval_) -
    reinterpret_cast<char*>(&proposal_id_)) + sizeof(is_add_approval_));
  // @@protoc_insertion_point(copy_constructor:protocol.ProposalApproveContract)
}

inline void ProposalApproveContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proposal_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_add_approval_) -
    reinterpret_cast<char*>(&proposal_id_)) + sizeof(is_add_approval_));
}

ProposalApproveContract::~ProposalApproveContract() {
  // @@protoc_insertion_point(destructor:protocol.ProposalApproveContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalApproveContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProposalApproveContract::ArenaDtor(void* object) {
  ProposalApproveContract* _this = reinterpret_cast< ProposalApproveContract* >(object);
  (void)_this;
}
void ProposalApproveContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalApproveContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalApproveContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ProposalApproveContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  ::memset(&proposal_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_add_approval_) -
      reinterpret_cast<char*>(&proposal_id_)) + sizeof(is_add_approval_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalApproveContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 proposal_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_add_approval = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_add_approval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProposalApproveContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ProposalApproveContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // int64 proposal_id = 2;
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_proposal_id(), target);
  }

  // bool is_add_approval = 3;
  if (this->_internal_is_add_approval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_add_approval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ProposalApproveContract)
  return target;
}

size_t ProposalApproveContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ProposalApproveContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // int64 proposal_id = 2;
  if (this->_internal_proposal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_proposal_id());
  }

  // bool is_add_approval = 3;
  if (this->_internal_is_add_approval() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalApproveContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalApproveContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalApproveContract::GetClassData() const { return &_class_data_; }

void ProposalApproveContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProposalApproveContract *>(to)->MergeFrom(
      static_cast<const ProposalApproveContract &>(from));
}


void ProposalApproveContract::MergeFrom(const ProposalApproveContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ProposalApproveContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (from._internal_proposal_id() != 0) {
    _internal_set_proposal_id(from._internal_proposal_id());
  }
  if (from._internal_is_add_approval() != 0) {
    _internal_set_is_add_approval(from._internal_is_add_approval());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalApproveContract::CopyFrom(const ProposalApproveContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ProposalApproveContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalApproveContract::IsInitialized() const {
  return true;
}

void ProposalApproveContract::InternalSwap(ProposalApproveContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalApproveContract, is_add_approval_)
      + sizeof(ProposalApproveContract::is_add_approval_)
      - PROTOBUF_FIELD_OFFSET(ProposalApproveContract, proposal_id_)>(
          reinterpret_cast<char*>(&proposal_id_),
          reinterpret_cast<char*>(&other->proposal_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalApproveContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto[0]);
}

// ===================================================================

ProposalCreateContract_ParametersEntry_DoNotUse::ProposalCreateContract_ParametersEntry_DoNotUse() {}
ProposalCreateContract_ParametersEntry_DoNotUse::ProposalCreateContract_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ProposalCreateContract_ParametersEntry_DoNotUse::MergeFrom(const ProposalCreateContract_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ProposalCreateContract_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto[1]);
}

// ===================================================================

class ProposalCreateContract::_Internal {
 public:
};

ProposalCreateContract::ProposalCreateContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.ProposalCreateContract)
}
ProposalCreateContract::ProposalCreateContract(const ProposalCreateContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.ProposalCreateContract)
}

inline void ProposalCreateContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProposalCreateContract::~ProposalCreateContract() {
  // @@protoc_insertion_point(destructor:protocol.ProposalCreateContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalCreateContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProposalCreateContract::ArenaDtor(void* object) {
  ProposalCreateContract* _this = reinterpret_cast< ProposalCreateContract* >(object);
  (void)_this;
  _this->parameters_. ~MapField();
}
inline void ProposalCreateContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ProposalCreateContract::ArenaDtor);
  }
}
void ProposalCreateContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalCreateContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ProposalCreateContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  owner_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalCreateContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int64, int64> parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProposalCreateContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ProposalCreateContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // map<int64, int64> parameters = 2;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ProposalCreateContract_ParametersEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ProposalCreateContract_ParametersEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ProposalCreateContract)
  return target;
}

size_t ProposalCreateContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ProposalCreateContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, int64> parameters = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int64 >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ProposalCreateContract_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalCreateContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalCreateContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalCreateContract::GetClassData() const { return &_class_data_; }

void ProposalCreateContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProposalCreateContract *>(to)->MergeFrom(
      static_cast<const ProposalCreateContract &>(from));
}


void ProposalCreateContract::MergeFrom(const ProposalCreateContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ProposalCreateContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalCreateContract::CopyFrom(const ProposalCreateContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ProposalCreateContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalCreateContract::IsInitialized() const {
  return true;
}

void ProposalCreateContract::InternalSwap(ProposalCreateContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalCreateContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto[2]);
}

// ===================================================================

class ProposalDeleteContract::_Internal {
 public:
};

ProposalDeleteContract::ProposalDeleteContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.ProposalDeleteContract)
}
ProposalDeleteContract::ProposalDeleteContract(const ProposalDeleteContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  proposal_id_ = from.proposal_id_;
  // @@protoc_insertion_point(copy_constructor:protocol.ProposalDeleteContract)
}

inline void ProposalDeleteContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
proposal_id_ = int64_t{0};
}

ProposalDeleteContract::~ProposalDeleteContract() {
  // @@protoc_insertion_point(destructor:protocol.ProposalDeleteContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalDeleteContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProposalDeleteContract::ArenaDtor(void* object) {
  ProposalDeleteContract* _this = reinterpret_cast< ProposalDeleteContract* >(object);
  (void)_this;
}
void ProposalDeleteContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalDeleteContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalDeleteContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ProposalDeleteContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  proposal_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalDeleteContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 proposal_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProposalDeleteContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ProposalDeleteContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // int64 proposal_id = 2;
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_proposal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ProposalDeleteContract)
  return target;
}

size_t ProposalDeleteContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ProposalDeleteContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // int64 proposal_id = 2;
  if (this->_internal_proposal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_proposal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalDeleteContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalDeleteContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalDeleteContract::GetClassData() const { return &_class_data_; }

void ProposalDeleteContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProposalDeleteContract *>(to)->MergeFrom(
      static_cast<const ProposalDeleteContract &>(from));
}


void ProposalDeleteContract::MergeFrom(const ProposalDeleteContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ProposalDeleteContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (from._internal_proposal_id() != 0) {
    _internal_set_proposal_id(from._internal_proposal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalDeleteContract::CopyFrom(const ProposalDeleteContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ProposalDeleteContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalDeleteContract::IsInitialized() const {
  return true;
}

void ProposalDeleteContract::InternalSwap(ProposalDeleteContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  swap(proposal_id_, other->proposal_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalDeleteContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fproposal_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fproposal_5fcontract_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::ProposalApproveContract* Arena::CreateMaybeMessage< ::protocol::ProposalApproveContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::ProposalApproveContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::ProposalCreateContract_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::protocol::ProposalCreateContract_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::ProposalCreateContract_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::ProposalCreateContract* Arena::CreateMaybeMessage< ::protocol::ProposalCreateContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::ProposalCreateContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::ProposalDeleteContract* Arena::CreateMaybeMessage< ::protocol::ProposalDeleteContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::ProposalDeleteContract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
