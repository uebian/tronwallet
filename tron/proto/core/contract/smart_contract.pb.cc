// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/contract/smart_contract.proto

#include "core/contract/smart_contract.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace protocol {
constexpr SmartContract_ABI_Entry_Param::SmartContract_ABI_Entry_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , indexed_(false){}
struct SmartContract_ABI_Entry_ParamDefaultTypeInternal {
  constexpr SmartContract_ABI_Entry_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartContract_ABI_Entry_ParamDefaultTypeInternal() {}
  union {
    SmartContract_ABI_Entry_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartContract_ABI_Entry_ParamDefaultTypeInternal _SmartContract_ABI_Entry_Param_default_instance_;
constexpr SmartContract_ABI_Entry::SmartContract_ABI_Entry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inputs_()
  , outputs_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , anonymous_(false)
  , constant_(false)
  , payable_(false)
  , type_(0)

  , statemutability_(0)
{}
struct SmartContract_ABI_EntryDefaultTypeInternal {
  constexpr SmartContract_ABI_EntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartContract_ABI_EntryDefaultTypeInternal() {}
  union {
    SmartContract_ABI_Entry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartContract_ABI_EntryDefaultTypeInternal _SmartContract_ABI_Entry_default_instance_;
constexpr SmartContract_ABI::SmartContract_ABI(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entrys_(){}
struct SmartContract_ABIDefaultTypeInternal {
  constexpr SmartContract_ABIDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartContract_ABIDefaultTypeInternal() {}
  union {
    SmartContract_ABI _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartContract_ABIDefaultTypeInternal _SmartContract_ABI_default_instance_;
constexpr SmartContract::SmartContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : origin_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bytecode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , trx_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , abi_(nullptr)
  , call_value_(int64_t{0})
  , consume_user_resource_percent_(int64_t{0})
  , origin_energy_limit_(int64_t{0})
  , version_(0){}
struct SmartContractDefaultTypeInternal {
  constexpr SmartContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartContractDefaultTypeInternal() {}
  union {
    SmartContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartContractDefaultTypeInternal _SmartContract_default_instance_;
constexpr CreateSmartContract::CreateSmartContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_contract_(nullptr)
  , call_token_value_(int64_t{0})
  , token_id_(int64_t{0}){}
struct CreateSmartContractDefaultTypeInternal {
  constexpr CreateSmartContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSmartContractDefaultTypeInternal() {}
  union {
    CreateSmartContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSmartContractDefaultTypeInternal _CreateSmartContract_default_instance_;
constexpr TriggerSmartContract::TriggerSmartContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , call_value_(int64_t{0})
  , call_token_value_(int64_t{0})
  , token_id_(int64_t{0}){}
struct TriggerSmartContractDefaultTypeInternal {
  constexpr TriggerSmartContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TriggerSmartContractDefaultTypeInternal() {}
  union {
    TriggerSmartContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TriggerSmartContractDefaultTypeInternal _TriggerSmartContract_default_instance_;
constexpr ClearABIContract::ClearABIContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ClearABIContractDefaultTypeInternal {
  constexpr ClearABIContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearABIContractDefaultTypeInternal() {}
  union {
    ClearABIContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearABIContractDefaultTypeInternal _ClearABIContract_default_instance_;
constexpr UpdateSettingContract::UpdateSettingContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , consume_user_resource_percent_(int64_t{0}){}
struct UpdateSettingContractDefaultTypeInternal {
  constexpr UpdateSettingContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSettingContractDefaultTypeInternal() {}
  union {
    UpdateSettingContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSettingContractDefaultTypeInternal _UpdateSettingContract_default_instance_;
constexpr UpdateEnergyLimitContract::UpdateEnergyLimitContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , origin_energy_limit_(int64_t{0}){}
struct UpdateEnergyLimitContractDefaultTypeInternal {
  constexpr UpdateEnergyLimitContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEnergyLimitContractDefaultTypeInternal() {}
  union {
    UpdateEnergyLimitContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEnergyLimitContractDefaultTypeInternal _UpdateEnergyLimitContract_default_instance_;
constexpr SmartContractDataWrapper::SmartContractDataWrapper(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : runtimecode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , smart_contract_(nullptr){}
struct SmartContractDataWrapperDefaultTypeInternal {
  constexpr SmartContractDataWrapperDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartContractDataWrapperDefaultTypeInternal() {}
  union {
    SmartContractDataWrapper _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartContractDataWrapperDefaultTypeInternal _SmartContractDataWrapper_default_instance_;
}  // namespace protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_core_2fcontract_2fsmart_5fcontract_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, indexed_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, anonymous_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, constant_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, inputs_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, outputs_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, type_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, payable_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, statemutability_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI, entrys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, origin_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, abi_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, bytecode_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, call_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, consume_user_resource_percent_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, origin_energy_limit_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, code_hash_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, trx_hash_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, new_contract_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, call_token_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, token_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, call_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, data_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, call_token_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, token_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, contract_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, consume_user_resource_percent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, origin_energy_limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContractDataWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContractDataWrapper, smart_contract_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContractDataWrapper, runtimecode_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::SmartContract_ABI_Entry_Param)},
  { 8, -1, sizeof(::protocol::SmartContract_ABI_Entry)},
  { 21, -1, sizeof(::protocol::SmartContract_ABI)},
  { 27, -1, sizeof(::protocol::SmartContract)},
  { 43, -1, sizeof(::protocol::CreateSmartContract)},
  { 52, -1, sizeof(::protocol::TriggerSmartContract)},
  { 63, -1, sizeof(::protocol::ClearABIContract)},
  { 70, -1, sizeof(::protocol::UpdateSettingContract)},
  { 78, -1, sizeof(::protocol::UpdateEnergyLimitContract)},
  { 86, -1, sizeof(::protocol::SmartContractDataWrapper)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_Entry_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_CreateSmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_TriggerSmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ClearABIContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_UpdateSettingContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_UpdateEnergyLimitContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContractDataWrapper_default_instance_),
};

const char descriptor_table_protodef_core_2fcontract_2fsmart_5fcontract_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"core/contract/smart_contract.proto\022\010pr"
  "otocol\032\017core/Tron.proto\"\254\007\n\rSmartContrac"
  "t\022\026\n\016origin_address\030\001 \001(\014\022\030\n\020contract_ad"
  "dress\030\002 \001(\014\022(\n\003abi\030\003 \001(\0132\033.protocol.Smar"
  "tContract.ABI\022\020\n\010bytecode\030\004 \001(\014\022\022\n\ncall_"
  "value\030\005 \001(\003\022%\n\035consume_user_resource_per"
  "cent\030\006 \001(\003\022\014\n\004name\030\007 \001(\t\022\033\n\023origin_energ"
  "y_limit\030\010 \001(\003\022\021\n\tcode_hash\030\t \001(\014\022\020\n\010trx_"
  "hash\030\n \001(\014\022\017\n\007version\030\013 \001(\005\032\220\005\n\003ABI\0221\n\006e"
  "ntrys\030\001 \003(\0132!.protocol.SmartContract.ABI"
  ".Entry\032\325\004\n\005Entry\022\021\n\tanonymous\030\001 \001(\010\022\020\n\010c"
  "onstant\030\002 \001(\010\022\014\n\004name\030\003 \001(\t\0227\n\006inputs\030\004 "
  "\003(\0132\'.protocol.SmartContract.ABI.Entry.P"
  "aram\0228\n\007outputs\030\005 \003(\0132\'.protocol.SmartCo"
  "ntract.ABI.Entry.Param\0229\n\004type\030\006 \001(\0162+.p"
  "rotocol.SmartContract.ABI.Entry.EntryTyp"
  "e\022\017\n\007payable\030\007 \001(\010\022N\n\017stateMutability\030\010 "
  "\001(\01625.protocol.SmartContract.ABI.Entry.S"
  "tateMutabilityType\0324\n\005Param\022\017\n\007indexed\030\001"
  " \001(\010\022\014\n\004name\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\"q\n\tEntr"
  "yType\022\024\n\020UnknownEntryType\020\000\022\017\n\013Construct"
  "or\020\001\022\014\n\010Function\020\002\022\t\n\005Event\020\003\022\014\n\010Fallbac"
  "k\020\004\022\013\n\007Receive\020\005\022\t\n\005Error\020\006\"a\n\023StateMuta"
  "bilityType\022\031\n\025UnknownMutabilityType\020\000\022\010\n"
  "\004Pure\020\001\022\010\n\004View\020\002\022\016\n\nNonpayable\020\003\022\013\n\007Pay"
  "able\020\004\"\207\001\n\023CreateSmartContract\022\025\n\rowner_"
  "address\030\001 \001(\014\022-\n\014new_contract\030\002 \001(\0132\027.pr"
  "otocol.SmartContract\022\030\n\020call_token_value"
  "\030\003 \001(\003\022\020\n\010token_id\030\004 \001(\003\"\225\001\n\024TriggerSmar"
  "tContract\022\025\n\rowner_address\030\001 \001(\014\022\030\n\020cont"
  "ract_address\030\002 \001(\014\022\022\n\ncall_value\030\003 \001(\003\022\014"
  "\n\004data\030\004 \001(\014\022\030\n\020call_token_value\030\005 \001(\003\022\020"
  "\n\010token_id\030\006 \001(\003\"C\n\020ClearABIContract\022\025\n\r"
  "owner_address\030\001 \001(\014\022\030\n\020contract_address\030"
  "\002 \001(\014\"o\n\025UpdateSettingContract\022\025\n\rowner_"
  "address\030\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022"
  "%\n\035consume_user_resource_percent\030\003 \001(\003\"i"
  "\n\031UpdateEnergyLimitContract\022\025\n\rowner_add"
  "ress\030\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022\033\n\023"
  "origin_energy_limit\030\003 \001(\003\"`\n\030SmartContra"
  "ctDataWrapper\022/\n\016smart_contract\030\001 \001(\0132\027."
  "protocol.SmartContract\022\023\n\013runtimecode\030\002 "
  "\001(\014BE\n\030org.tron.protos.contractZ)github."
  "com/tronprotocol/grpc-gateway/coreb\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_deps[1] = {
  &::descriptor_table_core_2fTron_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto = {
  false, false, 1762, descriptor_table_protodef_core_2fcontract_2fsmart_5fcontract_2eproto, "core/contract/smart_contract.proto", 
  &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once, descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_core_2fcontract_2fsmart_5fcontract_2eproto::offsets,
  file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto, file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto, file_level_service_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter() {
  return &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_core_2fcontract_2fsmart_5fcontract_2eproto(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto);
namespace protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmartContract_ABI_Entry_EntryType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto);
  return file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[0];
}
bool SmartContract_ABI_Entry_EntryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::UnknownEntryType;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Constructor;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Function;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Event;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Fallback;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Receive;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Error;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::EntryType_MIN;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::EntryType_MAX;
constexpr int SmartContract_ABI_Entry::EntryType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmartContract_ABI_Entry_StateMutabilityType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto);
  return file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[1];
}
bool SmartContract_ABI_Entry_StateMutabilityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::UnknownMutabilityType;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Pure;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::View;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Nonpayable;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Payable;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::StateMutabilityType_MIN;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::StateMutabilityType_MAX;
constexpr int SmartContract_ABI_Entry::StateMutabilityType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class SmartContract_ABI_Entry_Param::_Internal {
 public:
};

SmartContract_ABI_Entry_Param::SmartContract_ABI_Entry_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.SmartContract.ABI.Entry.Param)
}
SmartContract_ABI_Entry_Param::SmartContract_ABI_Entry_Param(const SmartContract_ABI_Entry_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  indexed_ = from.indexed_;
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI.Entry.Param)
}

inline void SmartContract_ABI_Entry_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
indexed_ = false;
}

SmartContract_ABI_Entry_Param::~SmartContract_ABI_Entry_Param() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI.Entry.Param)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SmartContract_ABI_Entry_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SmartContract_ABI_Entry_Param::ArenaDtor(void* object) {
  SmartContract_ABI_Entry_Param* _this = reinterpret_cast< SmartContract_ABI_Entry_Param* >(object);
  (void)_this;
}
void SmartContract_ABI_Entry_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartContract_ABI_Entry_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartContract_ABI_Entry_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI.Entry.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  type_.ClearToEmpty();
  indexed_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartContract_ABI_Entry_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool indexed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          indexed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.SmartContract.ABI.Entry.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.SmartContract.ABI.Entry.Param.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI_Entry_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI.Entry.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool indexed = 1;
  if (this->_internal_indexed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_indexed(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI.Entry.Param)
  return target;
}

size_t SmartContract_ABI_Entry_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI.Entry.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // bool indexed = 1;
  if (this->_internal_indexed() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmartContract_ABI_Entry_Param::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SmartContract_ABI_Entry_Param::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmartContract_ABI_Entry_Param::GetClassData() const { return &_class_data_; }

void SmartContract_ABI_Entry_Param::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SmartContract_ABI_Entry_Param *>(to)->MergeFrom(
      static_cast<const SmartContract_ABI_Entry_Param &>(from));
}


void SmartContract_ABI_Entry_Param::MergeFrom(const SmartContract_ABI_Entry_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI.Entry.Param)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_indexed() != 0) {
    _internal_set_indexed(from._internal_indexed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmartContract_ABI_Entry_Param::CopyFrom(const SmartContract_ABI_Entry_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI.Entry.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI_Entry_Param::IsInitialized() const {
  return true;
}

void SmartContract_ABI_Entry_Param::InternalSwap(SmartContract_ABI_Entry_Param* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, GetArenaForAllocation(),
      &other->type_, other->GetArenaForAllocation()
  );
  swap(indexed_, other->indexed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI_Entry_Param::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[0]);
}

// ===================================================================

class SmartContract_ABI_Entry::_Internal {
 public:
};

SmartContract_ABI_Entry::SmartContract_ABI_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  inputs_(arena),
  outputs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.SmartContract.ABI.Entry)
}
SmartContract_ABI_Entry::SmartContract_ABI_Entry(const SmartContract_ABI_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&anonymous_, &from.anonymous_,
    static_cast<size_t>(reinterpret_cast<char*>(&statemutability_) -
    reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI.Entry)
}

inline void SmartContract_ABI_Entry::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&anonymous_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&statemutability_) -
    reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
}

SmartContract_ABI_Entry::~SmartContract_ABI_Entry() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI.Entry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SmartContract_ABI_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SmartContract_ABI_Entry::ArenaDtor(void* object) {
  SmartContract_ABI_Entry* _this = reinterpret_cast< SmartContract_ABI_Entry* >(object);
  (void)_this;
}
void SmartContract_ABI_Entry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartContract_ABI_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartContract_ABI_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  name_.ClearToEmpty();
  ::memset(&anonymous_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statemutability_) -
      reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartContract_ABI_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool anonymous = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          anonymous_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool constant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          constant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.SmartContract.ABI.Entry.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::protocol::SmartContract_ABI_Entry_EntryType>(val));
        } else goto handle_unusual;
        continue;
      // bool payable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          payable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_statemutability(static_cast<::protocol::SmartContract_ABI_Entry_StateMutabilityType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI_Entry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool anonymous = 1;
  if (this->_internal_anonymous() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_anonymous(), target);
  }

  // bool constant = 2;
  if (this->_internal_constant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_constant(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_inputs(i), target, stream);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_outputs(i), target, stream);
  }

  // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_type(), target);
  }

  // bool payable = 7;
  if (this->_internal_payable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_payable(), target);
  }

  // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
  if (this->_internal_statemutability() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_statemutability(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI.Entry)
  return target;
}

size_t SmartContract_ABI_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI.Entry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool anonymous = 1;
  if (this->_internal_anonymous() != 0) {
    total_size += 1 + 1;
  }

  // bool constant = 2;
  if (this->_internal_constant() != 0) {
    total_size += 1 + 1;
  }

  // bool payable = 7;
  if (this->_internal_payable() != 0) {
    total_size += 1 + 1;
  }

  // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
  if (this->_internal_statemutability() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_statemutability());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmartContract_ABI_Entry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SmartContract_ABI_Entry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmartContract_ABI_Entry::GetClassData() const { return &_class_data_; }

void SmartContract_ABI_Entry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SmartContract_ABI_Entry *>(to)->MergeFrom(
      static_cast<const SmartContract_ABI_Entry &>(from));
}


void SmartContract_ABI_Entry::MergeFrom(const SmartContract_ABI_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_anonymous() != 0) {
    _internal_set_anonymous(from._internal_anonymous());
  }
  if (from._internal_constant() != 0) {
    _internal_set_constant(from._internal_constant());
  }
  if (from._internal_payable() != 0) {
    _internal_set_payable(from._internal_payable());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_statemutability() != 0) {
    _internal_set_statemutability(from._internal_statemutability());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmartContract_ABI_Entry::CopyFrom(const SmartContract_ABI_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI_Entry::IsInitialized() const {
  return true;
}

void SmartContract_ABI_Entry::InternalSwap(SmartContract_ABI_Entry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SmartContract_ABI_Entry, statemutability_)
      + sizeof(SmartContract_ABI_Entry::statemutability_)
      - PROTOBUF_FIELD_OFFSET(SmartContract_ABI_Entry, anonymous_)>(
          reinterpret_cast<char*>(&anonymous_),
          reinterpret_cast<char*>(&other->anonymous_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI_Entry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[1]);
}

// ===================================================================

class SmartContract_ABI::_Internal {
 public:
};

SmartContract_ABI::SmartContract_ABI(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entrys_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.SmartContract.ABI)
}
SmartContract_ABI::SmartContract_ABI(const SmartContract_ABI& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entrys_(from.entrys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI)
}

inline void SmartContract_ABI::SharedCtor() {
}

SmartContract_ABI::~SmartContract_ABI() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SmartContract_ABI::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SmartContract_ABI::ArenaDtor(void* object) {
  SmartContract_ABI* _this = reinterpret_cast< SmartContract_ABI* >(object);
  (void)_this;
}
void SmartContract_ABI::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartContract_ABI::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartContract_ABI::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entrys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartContract_ABI::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entrys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entrys_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entrys(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI)
  return target;
}

size_t SmartContract_ABI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
  total_size += 1UL * this->_internal_entrys_size();
  for (const auto& msg : this->entrys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmartContract_ABI::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SmartContract_ABI::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmartContract_ABI::GetClassData() const { return &_class_data_; }

void SmartContract_ABI::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SmartContract_ABI *>(to)->MergeFrom(
      static_cast<const SmartContract_ABI &>(from));
}


void SmartContract_ABI::MergeFrom(const SmartContract_ABI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entrys_.MergeFrom(from.entrys_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmartContract_ABI::CopyFrom(const SmartContract_ABI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI::IsInitialized() const {
  return true;
}

void SmartContract_ABI::InternalSwap(SmartContract_ABI* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entrys_.InternalSwap(&other->entrys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[2]);
}

// ===================================================================

class SmartContract::_Internal {
 public:
  static const ::protocol::SmartContract_ABI& abi(const SmartContract* msg);
};

const ::protocol::SmartContract_ABI&
SmartContract::_Internal::abi(const SmartContract* msg) {
  return *msg->abi_;
}
SmartContract::SmartContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.SmartContract)
}
SmartContract::SmartContract(const SmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  origin_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_origin_address().empty()) {
    origin_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_origin_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bytecode().empty()) {
    bytecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bytecode(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  code_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code_hash().empty()) {
    code_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code_hash(), 
      GetArenaForAllocation());
  }
  trx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trx_hash().empty()) {
    trx_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trx_hash(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_abi()) {
    abi_ = new ::protocol::SmartContract_ABI(*from.abi_);
  } else {
    abi_ = nullptr;
  }
  ::memcpy(&call_value_, &from.call_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&call_value_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract)
}

inline void SmartContract::SharedCtor() {
origin_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
trx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&abi_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&abi_)) + sizeof(version_));
}

SmartContract::~SmartContract() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SmartContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  origin_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trx_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abi_;
}

void SmartContract::ArenaDtor(void* object) {
  SmartContract* _this = reinterpret_cast< SmartContract* >(object);
  (void)_this;
}
void SmartContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  bytecode_.ClearToEmpty();
  name_.ClearToEmpty();
  code_hash_.ClearToEmpty();
  trx_hash_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && abi_ != nullptr) {
    delete abi_;
  }
  abi_ = nullptr;
  ::memset(&call_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&call_value_)) + sizeof(version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes origin_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_origin_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI abi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_abi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytecode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bytecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          call_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 consume_user_resource_percent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          consume_user_resource_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.SmartContract.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 origin_energy_limit = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          origin_energy_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes code_hash = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_code_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes trx_hash = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_trx_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 version = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes origin_address = 1;
  if (!this->_internal_origin_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_origin_address(), target);
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // .protocol.SmartContract.ABI abi = 3;
  if (this->_internal_has_abi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::abi(this), target, stream);
  }

  // bytes bytecode = 4;
  if (!this->_internal_bytecode().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bytecode(), target);
  }

  // int64 call_value = 5;
  if (this->_internal_call_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_call_value(), target);
  }

  // int64 consume_user_resource_percent = 6;
  if (this->_internal_consume_user_resource_percent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_consume_user_resource_percent(), target);
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // int64 origin_energy_limit = 8;
  if (this->_internal_origin_energy_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_origin_energy_limit(), target);
  }

  // bytes code_hash = 9;
  if (!this->_internal_code_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_code_hash(), target);
  }

  // bytes trx_hash = 10;
  if (!this->_internal_trx_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_trx_hash(), target);
  }

  // int32 version = 11;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract)
  return target;
}

size_t SmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes origin_address = 1;
  if (!this->_internal_origin_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_origin_address());
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contract_address());
  }

  // bytes bytecode = 4;
  if (!this->_internal_bytecode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bytecode());
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes code_hash = 9;
  if (!this->_internal_code_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_code_hash());
  }

  // bytes trx_hash = 10;
  if (!this->_internal_trx_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trx_hash());
  }

  // .protocol.SmartContract.ABI abi = 3;
  if (this->_internal_has_abi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abi_);
  }

  // int64 call_value = 5;
  if (this->_internal_call_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_call_value());
  }

  // int64 consume_user_resource_percent = 6;
  if (this->_internal_consume_user_resource_percent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_consume_user_resource_percent());
  }

  // int64 origin_energy_limit = 8;
  if (this->_internal_origin_energy_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_origin_energy_limit());
  }

  // int32 version = 11;
  if (this->_internal_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmartContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SmartContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmartContract::GetClassData() const { return &_class_data_; }

void SmartContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SmartContract *>(to)->MergeFrom(
      static_cast<const SmartContract &>(from));
}


void SmartContract::MergeFrom(const SmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_origin_address().empty()) {
    _internal_set_origin_address(from._internal_origin_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_bytecode().empty()) {
    _internal_set_bytecode(from._internal_bytecode());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_code_hash().empty()) {
    _internal_set_code_hash(from._internal_code_hash());
  }
  if (!from._internal_trx_hash().empty()) {
    _internal_set_trx_hash(from._internal_trx_hash());
  }
  if (from._internal_has_abi()) {
    _internal_mutable_abi()->::protocol::SmartContract_ABI::MergeFrom(from._internal_abi());
  }
  if (from._internal_call_value() != 0) {
    _internal_set_call_value(from._internal_call_value());
  }
  if (from._internal_consume_user_resource_percent() != 0) {
    _internal_set_consume_user_resource_percent(from._internal_consume_user_resource_percent());
  }
  if (from._internal_origin_energy_limit() != 0) {
    _internal_set_origin_energy_limit(from._internal_origin_energy_limit());
  }
  if (from._internal_version() != 0) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmartContract::CopyFrom(const SmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract::IsInitialized() const {
  return true;
}

void SmartContract::InternalSwap(SmartContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &origin_address_, GetArenaForAllocation(),
      &other->origin_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, GetArenaForAllocation(),
      &other->contract_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bytecode_, GetArenaForAllocation(),
      &other->bytecode_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &code_hash_, GetArenaForAllocation(),
      &other->code_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &trx_hash_, GetArenaForAllocation(),
      &other->trx_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SmartContract, version_)
      + sizeof(SmartContract::version_)
      - PROTOBUF_FIELD_OFFSET(SmartContract, abi_)>(
          reinterpret_cast<char*>(&abi_),
          reinterpret_cast<char*>(&other->abi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[3]);
}

// ===================================================================

class CreateSmartContract::_Internal {
 public:
  static const ::protocol::SmartContract& new_contract(const CreateSmartContract* msg);
};

const ::protocol::SmartContract&
CreateSmartContract::_Internal::new_contract(const CreateSmartContract* msg) {
  return *msg->new_contract_;
}
CreateSmartContract::CreateSmartContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.CreateSmartContract)
}
CreateSmartContract::CreateSmartContract(const CreateSmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_new_contract()) {
    new_contract_ = new ::protocol::SmartContract(*from.new_contract_);
  } else {
    new_contract_ = nullptr;
  }
  ::memcpy(&call_token_value_, &from.call_token_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&call_token_value_)) + sizeof(token_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.CreateSmartContract)
}

inline void CreateSmartContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&new_contract_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&new_contract_)) + sizeof(token_id_));
}

CreateSmartContract::~CreateSmartContract() {
  // @@protoc_insertion_point(destructor:protocol.CreateSmartContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSmartContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete new_contract_;
}

void CreateSmartContract::ArenaDtor(void* object) {
  CreateSmartContract* _this = reinterpret_cast< CreateSmartContract* >(object);
  (void)_this;
}
void CreateSmartContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CreateSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && new_contract_ != nullptr) {
    delete new_contract_;
  }
  new_contract_ = nullptr;
  ::memset(&call_token_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&call_token_value_)) + sizeof(token_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract new_contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_token_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          call_token_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 token_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          token_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSmartContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CreateSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // .protocol.SmartContract new_contract = 2;
  if (this->_internal_has_new_contract()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::new_contract(this), target, stream);
  }

  // int64 call_token_value = 3;
  if (this->_internal_call_token_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_call_token_value(), target);
  }

  // int64 token_id = 4;
  if (this->_internal_token_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_token_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CreateSmartContract)
  return target;
}

size_t CreateSmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CreateSmartContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // .protocol.SmartContract new_contract = 2;
  if (this->_internal_has_new_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_contract_);
  }

  // int64 call_token_value = 3;
  if (this->_internal_call_token_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_call_token_value());
  }

  // int64 token_id = 4;
  if (this->_internal_token_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_token_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSmartContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSmartContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSmartContract::GetClassData() const { return &_class_data_; }

void CreateSmartContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateSmartContract *>(to)->MergeFrom(
      static_cast<const CreateSmartContract &>(from));
}


void CreateSmartContract::MergeFrom(const CreateSmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CreateSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (from._internal_has_new_contract()) {
    _internal_mutable_new_contract()->::protocol::SmartContract::MergeFrom(from._internal_new_contract());
  }
  if (from._internal_call_token_value() != 0) {
    _internal_set_call_token_value(from._internal_call_token_value());
  }
  if (from._internal_token_id() != 0) {
    _internal_set_token_id(from._internal_token_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSmartContract::CopyFrom(const CreateSmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CreateSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSmartContract::IsInitialized() const {
  return true;
}

void CreateSmartContract::InternalSwap(CreateSmartContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSmartContract, token_id_)
      + sizeof(CreateSmartContract::token_id_)
      - PROTOBUF_FIELD_OFFSET(CreateSmartContract, new_contract_)>(
          reinterpret_cast<char*>(&new_contract_),
          reinterpret_cast<char*>(&other->new_contract_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSmartContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[4]);
}

// ===================================================================

class TriggerSmartContract::_Internal {
 public:
};

TriggerSmartContract::TriggerSmartContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.TriggerSmartContract)
}
TriggerSmartContract::TriggerSmartContract(const TriggerSmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&call_value_, &from.call_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.TriggerSmartContract)
}

inline void TriggerSmartContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&call_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
}

TriggerSmartContract::~TriggerSmartContract() {
  // @@protoc_insertion_point(destructor:protocol.TriggerSmartContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TriggerSmartContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TriggerSmartContract::ArenaDtor(void* object) {
  TriggerSmartContract* _this = reinterpret_cast< TriggerSmartContract* >(object);
  (void)_this;
}
void TriggerSmartContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TriggerSmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TriggerSmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TriggerSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  data_.ClearToEmpty();
  ::memset(&call_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TriggerSmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          call_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_token_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          call_token_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 token_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          token_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TriggerSmartContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TriggerSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // int64 call_value = 3;
  if (this->_internal_call_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_call_value(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  // int64 call_token_value = 5;
  if (this->_internal_call_token_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_call_token_value(), target);
  }

  // int64 token_id = 6;
  if (this->_internal_token_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_token_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TriggerSmartContract)
  return target;
}

size_t TriggerSmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TriggerSmartContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contract_address());
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int64 call_value = 3;
  if (this->_internal_call_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_call_value());
  }

  // int64 call_token_value = 5;
  if (this->_internal_call_token_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_call_token_value());
  }

  // int64 token_id = 6;
  if (this->_internal_token_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_token_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TriggerSmartContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TriggerSmartContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TriggerSmartContract::GetClassData() const { return &_class_data_; }

void TriggerSmartContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<TriggerSmartContract *>(to)->MergeFrom(
      static_cast<const TriggerSmartContract &>(from));
}


void TriggerSmartContract::MergeFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TriggerSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_call_value() != 0) {
    _internal_set_call_value(from._internal_call_value());
  }
  if (from._internal_call_token_value() != 0) {
    _internal_set_call_token_value(from._internal_call_token_value());
  }
  if (from._internal_token_id() != 0) {
    _internal_set_token_id(from._internal_token_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TriggerSmartContract::CopyFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TriggerSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerSmartContract::IsInitialized() const {
  return true;
}

void TriggerSmartContract::InternalSwap(TriggerSmartContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, GetArenaForAllocation(),
      &other->contract_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TriggerSmartContract, token_id_)
      + sizeof(TriggerSmartContract::token_id_)
      - PROTOBUF_FIELD_OFFSET(TriggerSmartContract, call_value_)>(
          reinterpret_cast<char*>(&call_value_),
          reinterpret_cast<char*>(&other->call_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TriggerSmartContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[5]);
}

// ===================================================================

class ClearABIContract::_Internal {
 public:
};

ClearABIContract::ClearABIContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.ClearABIContract)
}
ClearABIContract::ClearABIContract(const ClearABIContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.ClearABIContract)
}

inline void ClearABIContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClearABIContract::~ClearABIContract() {
  // @@protoc_insertion_point(destructor:protocol.ClearABIContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ClearABIContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearABIContract::ArenaDtor(void* object) {
  ClearABIContract* _this = reinterpret_cast< ClearABIContract* >(object);
  (void)_this;
}
void ClearABIContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearABIContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearABIContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ClearABIContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearABIContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearABIContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ClearABIContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ClearABIContract)
  return target;
}

size_t ClearABIContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ClearABIContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contract_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClearABIContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ClearABIContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClearABIContract::GetClassData() const { return &_class_data_; }

void ClearABIContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ClearABIContract *>(to)->MergeFrom(
      static_cast<const ClearABIContract &>(from));
}


void ClearABIContract::MergeFrom(const ClearABIContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ClearABIContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClearABIContract::CopyFrom(const ClearABIContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ClearABIContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearABIContract::IsInitialized() const {
  return true;
}

void ClearABIContract::InternalSwap(ClearABIContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, GetArenaForAllocation(),
      &other->contract_address_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearABIContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[6]);
}

// ===================================================================

class UpdateSettingContract::_Internal {
 public:
};

UpdateSettingContract::UpdateSettingContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.UpdateSettingContract)
}
UpdateSettingContract::UpdateSettingContract(const UpdateSettingContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  consume_user_resource_percent_ = from.consume_user_resource_percent_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdateSettingContract)
}

inline void UpdateSettingContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
consume_user_resource_percent_ = int64_t{0};
}

UpdateSettingContract::~UpdateSettingContract() {
  // @@protoc_insertion_point(destructor:protocol.UpdateSettingContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateSettingContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateSettingContract::ArenaDtor(void* object) {
  UpdateSettingContract* _this = reinterpret_cast< UpdateSettingContract* >(object);
  (void)_this;
}
void UpdateSettingContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSettingContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSettingContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdateSettingContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  consume_user_resource_percent_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSettingContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 consume_user_resource_percent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          consume_user_resource_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSettingContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdateSettingContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // int64 consume_user_resource_percent = 3;
  if (this->_internal_consume_user_resource_percent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_consume_user_resource_percent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdateSettingContract)
  return target;
}

size_t UpdateSettingContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdateSettingContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contract_address());
  }

  // int64 consume_user_resource_percent = 3;
  if (this->_internal_consume_user_resource_percent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_consume_user_resource_percent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSettingContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateSettingContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSettingContract::GetClassData() const { return &_class_data_; }

void UpdateSettingContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateSettingContract *>(to)->MergeFrom(
      static_cast<const UpdateSettingContract &>(from));
}


void UpdateSettingContract::MergeFrom(const UpdateSettingContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdateSettingContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (from._internal_consume_user_resource_percent() != 0) {
    _internal_set_consume_user_resource_percent(from._internal_consume_user_resource_percent());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSettingContract::CopyFrom(const UpdateSettingContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdateSettingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSettingContract::IsInitialized() const {
  return true;
}

void UpdateSettingContract::InternalSwap(UpdateSettingContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, GetArenaForAllocation(),
      &other->contract_address_, other->GetArenaForAllocation()
  );
  swap(consume_user_resource_percent_, other->consume_user_resource_percent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSettingContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[7]);
}

// ===================================================================

class UpdateEnergyLimitContract::_Internal {
 public:
};

UpdateEnergyLimitContract::UpdateEnergyLimitContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.UpdateEnergyLimitContract)
}
UpdateEnergyLimitContract::UpdateEnergyLimitContract(const UpdateEnergyLimitContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_address().empty()) {
    owner_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  origin_energy_limit_ = from.origin_energy_limit_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdateEnergyLimitContract)
}

inline void UpdateEnergyLimitContract::SharedCtor() {
owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
origin_energy_limit_ = int64_t{0};
}

UpdateEnergyLimitContract::~UpdateEnergyLimitContract() {
  // @@protoc_insertion_point(destructor:protocol.UpdateEnergyLimitContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateEnergyLimitContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEnergyLimitContract::ArenaDtor(void* object) {
  UpdateEnergyLimitContract* _this = reinterpret_cast< UpdateEnergyLimitContract* >(object);
  (void)_this;
}
void UpdateEnergyLimitContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEnergyLimitContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEnergyLimitContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdateEnergyLimitContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  origin_energy_limit_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEnergyLimitContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 origin_energy_limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          origin_energy_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEnergyLimitContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdateEnergyLimitContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_owner_address(), target);
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // int64 origin_energy_limit = 3;
  if (this->_internal_origin_energy_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_origin_energy_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdateEnergyLimitContract)
  return target;
}

size_t UpdateEnergyLimitContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdateEnergyLimitContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (!this->_internal_owner_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_owner_address());
  }

  // bytes contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contract_address());
  }

  // int64 origin_energy_limit = 3;
  if (this->_internal_origin_energy_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_origin_energy_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateEnergyLimitContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateEnergyLimitContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateEnergyLimitContract::GetClassData() const { return &_class_data_; }

void UpdateEnergyLimitContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateEnergyLimitContract *>(to)->MergeFrom(
      static_cast<const UpdateEnergyLimitContract &>(from));
}


void UpdateEnergyLimitContract::MergeFrom(const UpdateEnergyLimitContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdateEnergyLimitContract)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_address().empty()) {
    _internal_set_owner_address(from._internal_owner_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (from._internal_origin_energy_limit() != 0) {
    _internal_set_origin_energy_limit(from._internal_origin_energy_limit());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateEnergyLimitContract::CopyFrom(const UpdateEnergyLimitContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdateEnergyLimitContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEnergyLimitContract::IsInitialized() const {
  return true;
}

void UpdateEnergyLimitContract::InternalSwap(UpdateEnergyLimitContract* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_address_, GetArenaForAllocation(),
      &other->owner_address_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, GetArenaForAllocation(),
      &other->contract_address_, other->GetArenaForAllocation()
  );
  swap(origin_energy_limit_, other->origin_energy_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEnergyLimitContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[8]);
}

// ===================================================================

class SmartContractDataWrapper::_Internal {
 public:
  static const ::protocol::SmartContract& smart_contract(const SmartContractDataWrapper* msg);
};

const ::protocol::SmartContract&
SmartContractDataWrapper::_Internal::smart_contract(const SmartContractDataWrapper* msg) {
  return *msg->smart_contract_;
}
SmartContractDataWrapper::SmartContractDataWrapper(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protocol.SmartContractDataWrapper)
}
SmartContractDataWrapper::SmartContractDataWrapper(const SmartContractDataWrapper& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  runtimecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runtimecode().empty()) {
    runtimecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_runtimecode(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_smart_contract()) {
    smart_contract_ = new ::protocol::SmartContract(*from.smart_contract_);
  } else {
    smart_contract_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContractDataWrapper)
}

inline void SmartContractDataWrapper::SharedCtor() {
runtimecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
smart_contract_ = nullptr;
}

SmartContractDataWrapper::~SmartContractDataWrapper() {
  // @@protoc_insertion_point(destructor:protocol.SmartContractDataWrapper)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SmartContractDataWrapper::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  runtimecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete smart_contract_;
}

void SmartContractDataWrapper::ArenaDtor(void* object) {
  SmartContractDataWrapper* _this = reinterpret_cast< SmartContractDataWrapper* >(object);
  (void)_this;
}
void SmartContractDataWrapper::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartContractDataWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartContractDataWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContractDataWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runtimecode_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && smart_contract_ != nullptr) {
    delete smart_contract_;
  }
  smart_contract_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartContractDataWrapper::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.SmartContract smart_contract = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_smart_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes runtimecode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_runtimecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContractDataWrapper::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContractDataWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SmartContract smart_contract = 1;
  if (this->_internal_has_smart_contract()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::smart_contract(this), target, stream);
  }

  // bytes runtimecode = 2;
  if (!this->_internal_runtimecode().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_runtimecode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContractDataWrapper)
  return target;
}

size_t SmartContractDataWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContractDataWrapper)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes runtimecode = 2;
  if (!this->_internal_runtimecode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_runtimecode());
  }

  // .protocol.SmartContract smart_contract = 1;
  if (this->_internal_has_smart_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *smart_contract_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmartContractDataWrapper::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SmartContractDataWrapper::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmartContractDataWrapper::GetClassData() const { return &_class_data_; }

void SmartContractDataWrapper::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SmartContractDataWrapper *>(to)->MergeFrom(
      static_cast<const SmartContractDataWrapper &>(from));
}


void SmartContractDataWrapper::MergeFrom(const SmartContractDataWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContractDataWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_runtimecode().empty()) {
    _internal_set_runtimecode(from._internal_runtimecode());
  }
  if (from._internal_has_smart_contract()) {
    _internal_mutable_smart_contract()->::protocol::SmartContract::MergeFrom(from._internal_smart_contract());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmartContractDataWrapper::CopyFrom(const SmartContractDataWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContractDataWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContractDataWrapper::IsInitialized() const {
  return true;
}

void SmartContractDataWrapper::InternalSwap(SmartContractDataWrapper* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &runtimecode_, GetArenaForAllocation(),
      &other->runtimecode_, other->GetArenaForAllocation()
  );
  swap(smart_contract_, other->smart_contract_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContractDataWrapper::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_getter, &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once,
      file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI_Entry_Param* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI_Entry_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::SmartContract_ABI_Entry_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI_Entry* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::SmartContract_ABI_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::SmartContract_ABI >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract* Arena::CreateMaybeMessage< ::protocol::SmartContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::SmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::CreateSmartContract* Arena::CreateMaybeMessage< ::protocol::CreateSmartContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::CreateSmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::TriggerSmartContract* Arena::CreateMaybeMessage< ::protocol::TriggerSmartContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::TriggerSmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::ClearABIContract* Arena::CreateMaybeMessage< ::protocol::ClearABIContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::ClearABIContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::UpdateSettingContract* Arena::CreateMaybeMessage< ::protocol::UpdateSettingContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::UpdateSettingContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::UpdateEnergyLimitContract* Arena::CreateMaybeMessage< ::protocol::UpdateEnergyLimitContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::UpdateEnergyLimitContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContractDataWrapper* Arena::CreateMaybeMessage< ::protocol::SmartContractDataWrapper >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::SmartContractDataWrapper >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
